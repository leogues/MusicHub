services:
  air:
    container_name: air-dev
    build:
      context: ./backend
      dockerfile: dockerfile.dev
    env_file:
      - backend/.env
    volumes:
      - ./backend:/backend
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '200M'
  frontend:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: dockerfile.dev
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    ports:
      - '4200:4200'
    depends_on:
      - air
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: '500M'
  db:
    container_name: postgres-dev
    image: postgres
    # command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: MusicHub
    ports:
      - '5432:5432'
    deploy:
      resources:
        limits:
          cpus: '0.13'
          memory: '140MB'
  test_db:
    container_name: postgres_test-dev
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: MusicHubTest
    ports:
      - '5433:5432'
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '200MB'
  pgadmin:
    container_name: pgadmin-dev
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - '5050:80'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '500M'
  proxy:
    container_name: proxy-dev
    image: nginx
    volumes:
      - type: bind
        source: ./proxy/dev/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - '80:80'
    depends_on:
      - air
      - frontend
    deploy:
      resources:
        limits:
          cpus: '0.17'
          memory: '10MB'
